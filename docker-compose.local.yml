services:
  backend:
    build:
      context: . 
      dockerfile: ./local/Dockerfile/
    ports:
      - "8000:8000"
    env_file: docker.env
    depends_on:
      - redis
      - postgres
      - worker 
    volumes:
      - ./:/app
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks: 
      - app_network
    command: 
      make runserver

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks: 
      - app_network
  
  worker:
    build:
      context: .
      dockerfile: ./local/Dockerfile/ 
    env_file: docker.env
    command: > 
      celery -A core worker 
      --loglevel=info 
      --concurrency=2 
      -Q default 
    volumes:
      - ./:/app 
    depends_on: 
      - redis
      - postgres 
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    restart: unless-stopped
    networks:
      - app_network
    environment: 
      - DJANGO_SETTINGS_MODULE=core.settings

  flower:
    env_file: docker.env 
    image: mher/flower
    command: >
      celery -A core flower 
      --broker=${CELERY_BROKER_URL} 
      --port=5555 
      --basic-auth=admin@admin.com:admin
    ports:
      - "7777:5555"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - app_network


  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: task_db 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app_network

volumes:
  redis_data:
  postgres_data:

networks: 
  app_network:
    driver: bridge
